#!/usr/bin/env php
<?php

if ('cli' !== \PHP_SAPI) {
    throw new Exception('This script must be run from the command line.');
}

/**
 * yaml-linter, a compact Symfony-CLI utility for checking YAML file syntax.
 *
 * Uses the parsing facility of the Symfony Yaml Component.
 *
 * @author Markus Volkmer <markus.volkmer@mav.solutions>
 */

use Symfony\Component\Console\Application;
use MavSolutions\YamlLinter\YamlLinterCommand;

function includeIfExists(string $file): bool
{
    return file_exists($file) && include $file;
}

if (
    !includeIfExists(__DIR__ . '/../../../autoload.php') &&
    !includeIfExists(__DIR__ . '/../../../../autoload.php') &&
    !includeIfExists(__DIR__ . '/../../vendor/autoload.php') &&
    !includeIfExists(__DIR__ . '/../../../vendor/autoload.php') &&
    !includeIfExists(__DIR__ . '/../../../../../../vendor/autoload.php')
) {
    fwrite(STDERR, 'Install dependencies using Composer.'.PHP_EOL);
    exit(1);
}

if (!class_exists(Application::class)) {
    fwrite(STDERR, 'You need the "symfony/console" component in order to run the Yaml linter.'.PHP_EOL);
    exit(1);
}

try {
    (new Application('yaml-linter'))
        ->add($command = new YamlLinterCommand())
        ->getApplication()
        ->setDefaultCommand($command->getName(), true)
        ->run();
} catch (Exception $e) {
    fwrite(STDERR, $e->getMessage());

}
